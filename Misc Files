years = c(rep(2000,10),sort(rep(seq(2001,2018),12)), rep(2019,5))
months = c(rep(c("01","02","03","04","05","06","07","08","09","10","11","12"),19), "01", "02", "03", "04", "05")
days = c(rep(c(31,28,31,30,31,30,31,31,30,31,30,31),19),31,28,31,30,31)
months = cbind(months, days)
months = months[-(1:2),]
dates = cbind(years, months)
for(i in 1:(dim(dates)[1])){
  if(dates[i,2] == "02"){
    if(dates[i,1] == "2004" | dates[i,1] == "2008" | dates[i,1] == "2012" | dates[i,1] == "2016"){
      dates[i,3] = "29"
    }
  }
}

Grid1 = list()
for(i in 1:231){
  Grid1[[i]] = read.csv(paste0("https://raw.githubusercontent.com/hinestein/Aus.Monthly/master/AusGrid/Grid", dates[i,1], dates[i,2]), row.names = NULL)
  print(i)
}

a1 = Grid1[[1]][,3:2]
head(a1)
coordinates(a1) = ~Lon + Lat

proj4string(a1) <- CRS("+proj=longlat +ellps=GRS80 +no_defs")
a1 <- spTransform(a1, proj4string(aus))
a2 = over(a1, aus)

a3 = which(!is.na(a2[,1]))

a5 = a4[a3,]

scatter2D(a5[,1], a5[,2], cex = 0.2)


Grid2 = list()
for(i in 1:231){
  Grid2[[i]] = Grid1[[i]][a3, 2:7]
}

s2 = NULL
ss2 = NULL
sss2 = NULL
s3 = NULL
c1 = seq(20,1000,10)
for(i in c1[-c(1:27)]){
  set.seed(1998)
  k1 = kmeans(Grid2[[1]][,2:1], centers = i)
  k2 = k1$centers
  A4 = NULL
  k4 = NULL
  for(j in 1:i){
    k3 = which(distm(k2[j,],Grid2[[1]][,2:1]) == min(distm(k2[j,],Grid2[[1]][,2:1])))
    A4 = rbind(A4, Grid2[[1]][k3,])
    k4 = c(k4, k3)
  }
  print(1)
  Opt1 = Opt.Weight(formula = RainRate ~ 1, data = A4, locations = A4[,2:1], method = "IDW")
  print(2)
  Smod1 = SLM(formula = RainRate ~ 1, data = A4, locations = A4[,2:1], method = "IDW", LR = FALSE, k = Opt1[1], alpha = Opt1[2])
  print(3)
  W1 = Sep.Weight.Matrix(Oldlocations = A4[,2:1], Newlocations = Grid2[[1]][-k4,2:1], k = Opt1[1], alpha = Opt1[2], method = "IDW")
  fit = Smod1$coef$beta.hat[1] * rep(1, nrow(Grid2[[1]][-k4,2:1])) + Smod1$coef$lambda.hat * W1 %*% A4[,3]
  s1 = sqrt(sum((Grid2[[1]][-k4,3] - fit)^2)/(length(fit) - i))
  ss1 = sum((Grid2[[1]][-k4,3] - fit)^2)/length(fit) + 2 * i
  sss1 = sqrt(sum((Grid2[[1]][-k4,3] - fit)^2)/(length(fit) - i)^2)
  s2 = c(s2, s1)
  ss2 = c(ss2, ss1)
  sss2 = c(sss2, sss1)
  s3 = rbind(s3, Opt1)
  print(i)
}
